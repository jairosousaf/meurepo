# # -*- coding: utf-8 -*-
# # Aulas_Python_XP_Educacao.ipynb
# # Automatically generated by Colaboratory.
# # Original file is located at
# # https://colab.research.google.com/drive/1Yqel3SEz4t38uZBHF2T8Tsz028drMMff

# #Capítulo 1
# """

# Carlos = 'Antonio Carlos'
# print('Olá,', nome, 'seja bem-vindo!')

# pessoa = 'Jairo Figueiredo'
# print('Olá,', pessoa)

# numero = 1
# numero + 5
# 6 + numero
# 8 * (numero + numero * 2)

# """#Capitulo 2"""

# # define o valor do limiar
# limiar = 5

# menores = [] # cria lista menores
# maiores = [] # cria lista maiores

# # divide os números de 1 a 10 em maiores e menores
# for i in range(10):
#   if (i < limiar):
#     menores.append(i)
#   elif (i > limiar):
#     maiores.append(i)

# # imprime na tela os valores das listas
# print("Resultado final")
# print("menores:", menores)
# print("maiores:", maiores)

# pessoa = "Jairo Figueiredo,"
# idade = 45, "anos"
# altura = 1.70, "m"
# print(pessoa, idade, altura)

# Texto = "Este é um texto grande...."
# porcentagem = 0.5
# numero = -100
# print(numero)

# idade = 2022 - 1977
# print(idade)

# decimal = 15/3
# print(decimal)

# num1 = input(("Digite o primeiro número", ))
# print(num1)

# """#Capítulo 3 
# - Tipos Primitivos de Dados e Operadores

# x = 3
# y = -3
# big = 17173884726263648595583736262755696

# z = 5 + 4

# print(x, y)
# print(big + x)
# print(z)

# """### Exemplo do tipo `float`"""

# a = 3.5
# b = -3.5
# c = -a
# pi = 3.14959584837373673626252525
# d = 3.0
# f = x + a
# g = f + x

# print(a, b, c)
# print(pi + a) #o resultado será printado com no máximo 15 casas decimais.
# print(f)
# print(g)

# """###A função `type()`"""

# type(big)

# type(pi)

# type(-a + y)

# type(habilitado)

# type(texto)

# type(frase)

# """###Exemplos do tipo `bool`"""

# habilitado = True
# pendencias = False
# print(habilitado)
# print(pendencias)

# """###Exemplos do tipo `str`"""

# cidade = 'Belo Horizonte'
# nome = 'Jairo Figueiredo'
# texto = nome, 'mora na cidade de', cidade
# frase = 'Eu estou escrevendo um "texto" com aspas duplas'
# frase2 = "Eu estou escrevendo um 'texto' com aspas simples"

# print(cidade, ' - ', nome)
# print(texto)
# print(frase)
# print(frase2)

# """###Exemplos do tipo `NoneType`"""

# j = None #semelhante ao Null do C++

# """##Aula 02 - Operadores dos Tipos Primitivos de Dados

# ###Operadores Aritméticos

# x = 10
# y = 4
# z = 4.5
# print('x + y + z =', x + y + z)
# print('x - 3 =', x - 3)
# print('x * z =', x * z)
# print('x * 2 =', x * 2)
# print('x / (y + 2) =', x / (y + 2))
# print('x % y =', x % y)
# print('x // y =', x // y)
# print('x ** z =', x ** z)

# """A importância da precedência dos operadores...

# #Calcule a área de um trapézio, sendo:
# area = (B + b) * h / 2 = 100
# """

# B = 15  # Base maior do trapézio
# b = 10  # Base menor do trapézio
# h = 8   # Altura

# #Calculando a área de um trapézio
# area = ((B+b)*8)/2
# print('A área do Trapézio é: ', area)

# """###Operadores de Comparação

# 10 > 5

# x = 5
# y = 1
# s = 'palavra'

# print('x > y:', x > (y + 2))
# print('x <= 4.564:', x <= (4.564 + 1))
# print('s == palavra:', s != 'palavra')
# print('s == palavra:', s == 'palavra')
# print('(y * 0) == False:', (y * 0) == False)
# print('(y * 0) == True:', (y * 0) == True)
# print('s != abacaxi:', s != 'abacaxi')

# """Comparação com strings"""

# x = 3
# y = 'palavra'
# print(x == y)
# print(x != y)
# #print(x > y)

# a = 'casa'
# b = 'predio'
# c = 'elevador'
# d = 'casamento'

# print(a < b)
# print(b > c)
# print(b > c)
# print(a > d)
# print('abacaxi' >= 'abacaxi')

# """###Operadores Lógicos

# # Verifica se uma pessoa pode dirigir
# idade = 23
# possui_cnh = False # não possui
# print(idade > 18 and possui_cnh)

# # Verifica se um passageiro possui autorização para viajar sozinho
# idade = 15
# possui_auth = True # possui
# print(idade > 18 or possui_auth)

# print(True or False)
# print(True and False)
# print((10>1) and True)
# print(not (True or False))
# print(not ('palavra' == 'palavra'))

# """##Aula 03 - Operadores com Strings

# ###Operador de acesso das strings
# """

# 'jairo ' + 'sousa ' + 'de ' 'figueiredo'

# palavra = 'CONSOLAÇÃO'
# print(palavra)

# # consola
# print(palavra[:7])

# # sol
# print(palavra[3:6])

# # sola
# print(palavra[3:7])

# # ação
# print(palavra[6:10])

# # palavra
# print(palavra[:])

# """###Operações de concatenação e repetição"""

# 'ar' * 3

# s1 = 'Belo'
# s2 = 'Horizonte'

# # Concatenação (+)
# print(s1 + s2)
# print(s1, s2)
# print(s1 + ' ' + s2)
# print(s1 + ' Monte')

# # Repetição
# print(s1 * 5)
# print((s1 + ', ') * 4)

# """###Operações de filiação (pertencimento)"""

# s1 = 'consolação'
# s2 = 'sola'
# s3 = 'ação'

# print(s1 in s2)
# print(s2 in s1)
# print(s3 in s1)
# print('solar' in s1)
# print('solar' not in s2)

# x = 'brasil'
# print('bra' in x and not 'sil' in x)
# print('sil' in x)
# print('sil' not in x)
# print('ras' in x and not False)

# """###Funções e Métodos das Strings"""

# len('arara')
# print('O tamanho da string é: ', len('arara'))

# palavra = 'consolação'
# print(len(palavra))

# len('') # Vazio ou zero

# s1 = 'Belo Horizonte'
# s2 = 'Esta é uma frase, com vírgula'

# print(s1.upper()) # transformas todas as letras em maiúsculas
# print(s1.lower()) # transformas todas as letras em minúscula
# print(s2.title()) # transforma a primeira letra de cada palavra em maiúscula

# print(s1.replace('Horizonte', 'Monte')) # substitui Horizonte por Monte
# print(s1.startswith('Belo')) # verifica se a string "começa" com 'Belo'
# print(s1.endswith('Monte')) # verifica se a string "termina" com 'Monte'

# print(s2.find('frase')) # retorna o índice da primeira ocorrencia da palavra 'frase'
# print(s2.split()) # particiona a string em outras separadas por espaço
# print(s2.split(',')) # particiona a string em outras separadas por vírgula

# s3 = '    palavra com espaços    '
# print(s3.strip()) # remove os espações extras no início e fim da string

# """##Aula 04 - Conversão e Formatação dos Tipos de Dados

# ###Conversão dos tipos de Dados
# """

# nasc = 1977
# ano_atual = 2023
# idade = ano_atual - nasc
# saida = 'Eu tenho, ' + str(idade) + ' anos.'
# print(saida)

# # convertendo STR em INT (vice-versa)
# saida2 = str(idade)
# print(saida2)

# # conversão do tipo int
# print(float(10))
# print(bool(-1))
# print(bool(0))
# print(str(999))
# print(bool(-0))

# # conversão do tipo float
# print(int(9.999))
# print(bool(-0.99))
# print(bool(0))
# print(str(-0.99))

# # conversão do tipo bool
# print(int(True))
# print(int(False))
# print(float(False))
# print(str(True))
# print(str(False))

# # conversão do tipo str
# print(int('-99')) # -99
# print(float('0.01')) # 0.01
# print(bool('palavra')) # True
# print(bool('')) # False

# int(float('99.0'))

# # particularidades com o tipo None
# print(str(None))
# print(bool(None))

# """###Formatação usando f-strings"""

# var = 15

# f'Exemplo de f-string com um valor {var} e uma expressão {10 == 15}.' # resposta booleana False

# f'Exemplo de f-string com um valor {var} e uma expressão {var + 1}.' # resposta inteiro

# nasc - 1977
# ano = 2023
# idade = ano - nasc
# print(f'Eu tenho {idade}, anos') # executando 1 variável

# print(f'Eu tenho {ano - nasc}, anos') # executando 2 variáveis declaradas

# palavra = 'ave'
# print(f'A palavra {palavra.upper()}, possui {len(palavra)} letras.') # transformando em maiúscula e calculando a quantidade de caracteres.

# orc = 5000
# vlr_gasto = 430
# pct = (vlr_gasto / orc) * 100
# print(f'Porcentagem já gasta do orçamento: {pct}%')

# print(f'Porcentagem já gasta do orçamento: {pct:.2f}%') # acrescentando casas decimais.

# """#Capítulo 04 
# - Fluxos de Controle em Python

# ##Aula 01 - Conversão e Formatação dos Tipos de Dados

# ###Estruturas Condicionais
# """

# y = 0
# x = 11
# if x > 10:
#   y = x + 99
# print(y)

# # Usando identação correta
# y = 0
# a = 0
# b = 0
# c = 0
# x = 10
# if x >= 10:
#   y = x + 99
#   a = x * 2
#   b = x + 2
#   c = x ** 2
# print(y, a, b, c)

# # Atenção para a IDENTAÇÃO recuada, alterando o resultado final.
# y = 0
# a = 0
# b = 0
# c = 0
# x = 5
# if x >= 10:
#   y = x + 99
#   a = x * 2
# b = x + 2
# c = x ** 2
# print(y, a, b, c)

# # Atenção para a IDENTAÇÃO recuada, alterando o resultado final.
# y = 0
# a = 0
# b = 0
# c = 0
# x = 5
# if x >= 10:
#   y = x + 99
#   a = x * 2
#   b = x + 2
# c = x ** 2
# print(y, a, b, c)

# # Atenção para a IDENTAÇÃO recuada (IndentationError:).
# y = 0
# a = 0
# b = 0
# c = 0
# x = 5
# if x >= 10:
#   y = x + 99
#   a = x * 2
# b = x + 2
#   c = x ** 2
# print(y, a, b, c)

# # Exemplo em que a condição é verdadeira
# idade = 45
# if idade >= 18:
#   print('Idade suficiente para CNH!')
# print('Finalizando o programa')

# # Exemplo em que a condição é falsa
# idade = 15
# if idade >= 18:
#   print('Idade suficiente para CNH!')
# print('Finalizando o programa')

# # Verifica se uma pessoa ESTÁ apta para se aposentar
# idade = 70
# t_contrib = 20
# if idade >= 65 or t_contrib >= 35:
#   print('Habilitado para solicitar aposentadoria!')
# print('Fim do programa')

# # Verifica se uma pessoa NÃO está apta a se aposentar
# idade = 45
# t_contrib = 20

# if idade >= 65 and t_contrib >= 35:
#   print('Não habilitado para solicitar aposentadoria!')
# print('Fim do programa')

# # Verifica se uma pessoa NÃO está apta a se aposentar
# idade = 70
# t_contrib = 20

# if idade < 65 and t_contrib < 35:
#   print('Não habilitado para solicitar aposentadoria!')
# print('Fim do programa')

# """###Estruturas Condicionais `if`"""

# # Verifica se uma pessoa ESTÁ apta para se aposentar (OU)
# idade = 70
# t_contrib = 20
# if idade >= 65 or t_contrib >= 35:
#   print('Habilitado para solicitar aposentadoria!')
# print('Fim do programa')

# # Verifica se uma pessoa NÃO ESTÁ apta para se aposentar (AND)
# idade = 70
# t_contrib = 20
# if idade < 65 and t_contrib < 35:
#   print('Não habilitado para solicitar aposentadoria!')

# """###Estruturas Condicionais `if - else`"""

# x = 11
# y = 0
# if x > 10:
#   print(f'O valor de x = {x}, então > 10')
#   y = x * 2
# else:
#   print(f'O valor de x = {x}, então <= 10')
#   y = x ** 2
# print(f'O valor de y = {y}')

# # Exemplo em que a condição é VERDADEIRA
# idade = 35

# if idade >= 18:
#   print('A idade é suficiente para a emissão da CNH no Brasil')
# else:
#   print('A idade não atende a legislação Brasileira')

# # Exemplo em que a condição é FALSA
# idade = 16

# if idade >= 18:
#   print('A idade é suficiente para a emissão da CNH no Brasil')
# else:
#   print('A idade não atende a legislação Brasileira')

# # Verifica se uma pessoa ESTÁ apta a se aposentar: SEM INDICAR O MOTIVO
# idade = 20
# t_contrib = 20

# if idade >= 65 or t_contrib >= 35:
#   print('Habilitado para solicitar aposentadoria!')
# else:
#   print('Não habilitado para solicitar aposentadoria')

# # Verifica se uma pessoa NÃO ESTÁ apta a se aposentar: COM INDICAÇÃO DO MOTIVO
# idade = 60
# t_contrib = 37

# if idade >= 65:
#   print('Habilitado para aposentadoria por idade!')
# else:
#   print('Não habilitado para aposentaria por idade')

# if t_contrib >= 35:
#     print('Habilitado para aposentadoria por tempo de contribuição!')
# else:
#     print('Não habilitado para solicitar aposentadoria!')

# """###Estruturas Condicionais `if - elif - else`

# # Resolvendo o problema com apenas if - else
# # idade 22 anos, faixa etária: Adulto

# idade = 60

# if idade < 12:
#   fx_etaria = 'Criança'
# else:
#   if idade < 18:
#     fx_etaria = 'Adolescente'
#   else:
#     if idade < 60:
#       fx_etaria = 'Adulto'
#     else:
#       fx_etaria = 'Idoso'
# print('Faixa etária:', fx_etaria)

# # Resolvendo o mesmo problema utilizando a estrutura if - elif - else
# idade = 11

# if idade < 12:
#   fx_etaria = 'Criança'
# elif idade < 18:
#   fx_etaria = 'Adolescente'
# elif idade < 60:
#   fx_etaria = 'Adulto'
# else:
#   fx_etaria = 'Idoso'
# print('Faixa etária:', fx_etaria)

# """##Aula 02 - Estrutura de Repetição

# ###Estruturas de Repetição `while`

# #####while <expressão>:
# #####    <bloco de código a ser repetido EQUANTO a expressão FOR verdadeira>
# """

# # Contando N - 1
# n = 15
# while n > 0:
#   print(n, 'Meu nome é: Jairo')
#   n = n - 1
# print('Fim do programa')

# # Contando N + 1
# n = 0
# while n < 15:
#   print(n, 'Meu nome é: Jairo')
#   n = n + 1
# print('Fim do programa')

# # Contando N != 0 and == 0
# # n = 0
# # while n <= 15 and n != 0:
# #   print(n, 'Meu nome é: Jairo')
# #   n = n + 1
# # print('Fim do programa')

# n = 0
# while n < 5 and n < 20:
#   print(n, 'Meu nome é: Jairo')
#   n = n + 1
# print('Fim do programa')

# num = 15
# nome = 'Jairo' #input('Digite seu nome: ')

# while num > 0:
#   print(num, f'Meu nome é: Jairo')
  
#   num = num - 1
# print('Fim do programa')

# # Exemplo com n = 15
# num = 15
# soma = 0
# cont = 0

# while cont <= num:
#   # print('Soma:', soma)
#   # print('Contador:', cont)
#   soma = soma + cont
#   cont = cont + 1
#   # print('A soma depois é:', soma)
#   # print('O contador depois é:', cont)
#   # print()
# print(f'A soma dos primeiros {num} inteiros é: {soma}')

# # Com menos linha de código
# n = 15
# soma = 0
# while n >= 0:
#   soma = soma + n
#   n = n - 1
# print(f'A soma dos primeiros inteiros é: {soma}')

# """###Estruturas de Repetição `for ... in`"""

# # For <item> in <sequencia>:
# #      <bloco de código a ser repetido para cada item da sequencia>

# # Exemplo de palavra: araraquara
# p = 'araraquara'
# cont = 0

# for letra in p:
#   if letra == 'a':
#     cont = cont + 1
# print(f'A palavra {p} possui {cont} letras a.')

# # transformando strings em números e realizando a soma
# num = '6187'
# soma = 0

# for caract in num:
#   soma = soma + int(caract)
# print(f'O resultado da soma é: {soma}')

# """####A Função Range, para geração de sequência de números"""

# # range(inicio, fim, incremento)

# # Recebendo três números aleatórios do usuário
# num1 = float(input('Digite o primeiro número: '))
# num2 = float(input('Digite o segundo número: '))
# num3 = float(input('Digite o terceiro número: '))

# # Verificando e encontrando o maior dentre eles
# maior_num = max(num1, num2, num3)

# # Ordenando os números em ordem crescente
# order_cresc = sorted([num1, num2, num3])

# # Exibindo o maior número em ordem crescente
# print()
# print('O maior número em ordem crescente é:', maior_num)
# print('Os números em ordem crescente são:', order_cresc)